{"version":3,"file":"public/js/app.js","sources":["app/app.js","app/config.js","app/controllers.js","app/controllers/application.js","app/controllers/hello.js","app/data/statusCodes.js","app/ember.js","app/initialize.js","app/messages.js","app/models.js","app/router.js","app/templates.js","app/templates/application.hbs","app/templates/hello.hbs","app/utils/ajax.js","app/views.js","app/views/application.js","app/views/hello.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;CCAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;CCAA;AAAA;AACA;AACA;AAFA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnvIA;AAAA;CCAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA","sourcesContent":["module.exports = Em.Application.create({\n\tname : 'Nable DataWorks',\n\trootElement : '#wrapper',\n  LOG_TRANSITIONS: true\n});","\nvar App = require('app');\n\nApp.testMode = (location.port == '3333'); // test mode is automatically enabled if running on brunch server\nApp.testModeDelayForActions = 10000;\n//App.apiPrefix = '/api';\nApp.timeout = 180000; // default AJAX timeout\nApp.maxRetries = 3; // max number of retries for certain AJAX calls\nApp.bgOperationsUpdateInterval = 6000;\nApp.componentsUpdateInterval = 6000;\nApp.contentUpdateInterval = 15000;\nApp.maxRunsForAppBrowser = 500;\nApp.pageReloadTime=3600000;\n\n$.ajaxSetup({\n  cache: false\n});","require('controllers/application');\nrequire('controllers/hello');","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nApp.ApplicationController = Em.Controller.extend({\n\n  name: 'applicationController',\n\n  init: function(){\n    this._super();\n  }\n});","var App = require('app');\n\nApp.HelloController = Em.ObjectController.extend({\n\tname : 'helloController',\n\n\tmessage : '',\n\n\tactions : {\n\t\tgetMessage : function() {\n\t\t\tif (this.get('message') != '') {\n\t\t\t\tthis.set('message', '');\n\t\t\t}\n\t\t\tApp.ajax.send({\n\t\t\t\tname : 'hello',\n\t\t\t\tsender : this,\n\t\t\t\tdata : {\n\t\t\t\t\tx : 'hello'\n\t\t\t\t},\n\t\t\t\tsuccess : 'getMessageSuccessCallback',\n\t\t\t\terror : 'getMessageErrorCallback'\n\t\t\t});\n\t\t},\n\t},\n\n\tgetMessageSuccessCallback : function(data) {\n\t\tthis.set('message', data);\n\t},\n\n\tgetMessageErrorCallback : function(error) {\n\t\tconsole.log(\"failed to invoke get message from the server\");\n\t}\n});\n","module.exports = {\n\t200: function () {\n\t\tconsole.log(\"Status code 200: Success.\");\n  },\n  202: function () {\n    console.log(\"Status code 202: Success for creation.\");\n  },\n\t400: function () {\n\t\tconsole.log(\"Error code 400: Bad Request.\");\n\t},\n\t401: function () {\n\t\tconsole.log(\"Error code 401: Unauthorized.\");\n\t},\n\t402: function () {\n\t\tconsole.log(\"Error code 402: Payment Required.\");\n\t},\n\t403: function () {\n\t\tconsole.log(\"Error code 403: Forbidden.\");\n    App.router.logOff();\n\t},\n\t404: function () {\n\t\tconsole.log(\"Error code 404: URI not found.\");\n\t},\n\t500: function () {\n\t\tconsole.log(\"Error code 500: Internal Error on server side.\");\n\t},\n\t501: function () {\n\t\tconsole.log(\"Error code 501: Not implemented yet.\");\n\t},\n\t502: function () {\n\t\tconsole.log(\"Error code 502: Services temporarily overloaded.\");\n\t},\n\t503: function () {\n\t\tconsole.log(\"Error code 503: Gateway timeout.\");\n\t}\n};\n","module.exports=Ember;","window.App = require('app');\n\nrequire('config');\nrequire('messages');\nrequire('controllers');\nrequire('templates');\nrequire('views');\nrequire('router');\nrequire('utils/ajax');\n\nconsole.log('after initialize');","Em.I18n.translations = {\n\t'app.name' : 'Nable DataWorks',\n};","","var App = require('app');\nApp.Router.map(function() {\n\tthis.route(\"hello\", {\n\t\tpath : \"/hello\"\n\t});\n});\n\nApp.HelloRoute = Ember.Route.extend({\n\tindex : Ember.Route.extend({\n\t\troute : '/',\n\t\tenter : function(router, context) {\n\t\t\talert(1122);\n\t\t},\n\t\tredirectsTo : 'hello'\n\t}),\n\n\thello : Ember.Route.extend({\n\t\troute : '/hello',\n\n\t\tenter : function(router, context) {\n\t\t\talert(11);\n\t\t},\n\n\t\tconnectOutlets : function(router, context) {\n\t\t\t$('title').text(Em.I18n.t('app.name'));\n\t\t\trouter.get('applicationController').connectOutlet('hello');\n\t\t},\n\n\t\tgetMessage : function(router, event) {\n\t\t\tApp.router.get('helloController').getMessage();\n\t\t},\n\t})\n\n});\n\nApp.IndexRoute = Ember.Route.extend({\n\tbeforeModel : function() {\n\t\tthis.transitionTo('hello');\n\t}\n});\n","","Ember.TEMPLATES[module.id] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"\\n\\n<div id=\\\"main\\\">\\n  <div id=\\\"top-nav\\\">\\n    <div>\\n      <div>\\n        <div>\\n          <a target=\\\"_blank\\\" alt=\\\"Nable DataWorks\\\" title=\\\"Nable DataWorks\\\">\");\n  data.buffer.push(escapeExpression((helper = helpers.t || (depth0 && depth0.t),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"app.name\", options) : helperMissing.call(depth0, \"t\", \"app.name\", options))));\n  data.buffer.push(\"</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n    <div id=\\\"content\\\">\\n      \");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","Ember.TEMPLATES[module.id] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"row\\\">\\n\t<div class=\\\"span6\\\">\\n\t\t<div class=\\\"box\\\">\\n\t\t\t<button class=\\\"btn btn-inverse\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"getMessage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n  data.buffer.push(\">\\n\t\t\t\thello\\n\t\t\t</button>\\n\t\t\t\");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextArea\", {hash:{\n    'class': (\"span6\"),\n    'valueBinding': (\"message\"),\n    'rows': (\"5\"),\n    'placeholder': (\"\")\n  },hashTypes:{'class': \"STRING\",'valueBinding': \"STRING\",'rows': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'class': depth0,'valueBinding': depth0,'rows': depth0,'placeholder': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n\t\t</div>\\n\t</div>\\n</div>\\n\");\n  return buffer;\n  \n});\nmodule.exports = module.id;","var App = require('app');\n\n/**\n * Config for each ajax-request\n *\n * Fields example:\n *  mock - testMode url\n *  real - real url (without API prefix)\n *  type - request type (also may be defined in the format method)\n *  format - function for processing ajax params after default formatRequest. Return ajax-params object\n *  testInProduction - can this request be executed on production tests (used only in tests)\n *\n * @type {Object}\n */\nvar urls = {\n  'hello': {\n    'real': 'hello?x={x}',\n    'type': 'GET'\n  }\n};\n/**\n * Replace data-placeholders to its values\n *\n * @param {String} url\n * @param {Object} data\n * @return {String}\n */\nvar formatUrl = function (url, data) {\n  var keys = url.match(/\\{\\w+\\}/g);\n  keys = (keys === null) ? [] : keys;\n  if (keys) {\n    keys.forEach(function (key) {\n      var raw_key = key.substr(1, key.length - 2);\n      var replace;\n      if (!data[raw_key]) {\n        replace = '';\n      }\n      else {\n        replace = data[raw_key];\n      }\n      url = url.replace(new RegExp(key, 'g'), replace);\n    });\n  }\n  return url;\n};\n\n/**\n * this = object from config\n * @return {Object}\n */\nvar formatRequest = function (data) {\n  var opt = {\n    type: this.type || 'GET',\n    timeout: App.timeout,\n    //dataType: 'json',\n    statusCode: require('data/statusCodes')\n  };\n  \n  opt.url = '/api/' + formatUrl(this.real, data);\n\n  if (this.format) {\n    jQuery.extend(opt, this.format(data, opt));\n  }\n  return opt;\n};\n\n/**\n * Wrapper for all ajax requests\n *\n * @type {Object}\n */\nApp.ajax = {\n  /**\n   * Send ajax request\n   *\n   * @param {Object} config\n   * @return Object jquery ajax object\n   *\n   * config fields:\n   *  name - url-key in the urls-object *required*\n   *  sender - object that send request (need for proper callback initialization) *required*\n   *  data - object with data for url-format\n   *  beforeSend - method-name for ajax beforeSend response callback\n   *  success - method-name for ajax success response callback\n   *  error - method-name for ajax error response callback\n   *  callback - callback from <code>App.updater.run</code> library\n   */\n  send: function (config) {\n\n    console.warn('============== ajax ==============', config.name, config.data);\n\n    if (!config.sender) {\n      console.warn('Ajax sender should be defined!');\n      return null;\n    }\n\n    // default parameters\n    var params = { };\n\n    // extend default parameters with provided\n    if (config.data) {\n      jQuery.extend(params, config.data);\n    }\n\n    var opt = {};\n    opt = formatRequest.call(urls[config.name], params);\n\n    // object sender should be provided for processing beforeSend, success and error responses\n    opt.beforeSend = function (xhr) {\n      if (config.beforeSend) {\n        config.sender[config.beforeSend](opt, xhr, params);\n      }\n    };\n    opt.success = function (data) {\n      console.log(\"TRACE: The url is: \" + opt.url);\n      if (config.success) {\n        config.sender[config.success](data, opt, params);\n      }\n    };\n    opt.error = function (request, ajaxOptions, error) {\n      if (config.error) {\n        config.sender[config.error](request, ajaxOptions, error, opt);\n      }\n    };\n    opt.complete = function () {\n      if (config.callback) {\n        config.callback();\n      }\n    };\n    if ($.mocho) {\n      opt.url = 'http://' + $.hostName + opt.url;\n    }\n    return $.ajax(opt);\n  }\n}\n","require('views/application');\nrequire('views/hello');","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nApp.ApplicationView = Em.View.extend({\n    templateName: require('templates/application')\n});","\nvar App = require('app');\n\nApp.HelloView = Em.View.extend({\n  templateName:require('templates/hello'),\n  didInsertElement:function () {\n    \n  }\n  \n});\n"]}